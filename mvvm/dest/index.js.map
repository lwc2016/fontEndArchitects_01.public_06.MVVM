{"version":3,"file":"index.js","sources":["../src/utils.js","../src/dep.js","../src/watcher.js","../src/compile.js","../src/observer.js","../src/index.js"],"sourcesContent":["// 获取值\nexport const getValue = (vm, expr) => {\n    const exprs = expr.split(\".\");\n    return exprs.reduce((total, item) => {\n        return total[item];\n    }, vm.$data);\n};\n\n// 添加值\nexport const setValue = (vm, expr, value) => {\n    const exprs = expr.split(\".\");\n    exprs.reduce((total, item, index) => {\n        if(index === exprs.length - 1){\n            total[item] = value;\n        }else{\n            return total[item];\n        }\n    }, vm.$data);\n};","export default class Dep{\n    constructor(key){\n        // 监听事件的列表\n        this.listeners = [];\n        this.uid = (Math.random() * 10000000).toFixed(0);\n    }\n    // 默认target是空的\n    static target = null;\n    // 添加监听函数\n    addListener(listener){\n        if(!this.listeners.includes(listener)){\n            this.listeners.push(listener);\n        }\n    }\n    // 当数据变化时，通知函数\n    notify(){\n        //依次执行监听对象的update方法\n        this.listeners.forEach(listener => listener.update());\n    }\n}","// watcher，观察者的目的是给需要变化的那个元素增加一个观察者，当数据变化时调用对应的方法\nimport { getValue } from \"./utils\";\n\nexport default class Watcher{\n    constructor(vm, expr, callback){\n        this.vm = vm;\n        this.expr = expr;\n        this.callback = callback;\n        // 存储旧值\n        this.value = getValue(this.vm, this.expr);\n    }\n    // 对外暴露的方法\n    update(){\n        // 获取最新的值\n        const newValue = getValue(this.vm, this.expr);\n        // 比较新值和旧值是否相等，如果不等则执行回调函数\n        if(this.value !== newValue){\n            this.callback && this.callback(newValue);\n        }\n    }\n};","// compile类，作用是编译dom元素\nimport { getValue, setValue } from \"./utils\";\nimport Dep from \"./dep\";\nimport Watcher from \"./watcher\";\n\nexport default class Compile{\n    constructor(el, vm){\n        /*\n        *** 接收2个参数：\n        *** element: 需要挂载的dom节点\n        *** vm: mvvm实例\n        */\n        // 将参数挂载到compile实例上\n        // 判断el是否是个dom节点，如果不是则表示是个选择器，则调用document.querySelector方法返回一个dom节点\n        this.el = this.isElementNode(el) ? el : document.querySelector(el);\n        this.vm = vm;\n\n        // 判断this.el是否存在，否则输入的选择器不存在\n        if(this.el){\n            // 将node节点元素转换成fragment\n            const fragment = this.node2fragment(this.el);\n\n            // 执行编译\n            this.compile(fragment);\n\n            // 将fragment挂载到dom中\n            this.el.appendChild(fragment);\n        }\n    }\n    /*---------工具方法----------*/\n    // 判断是否是dom节点\n    isElementNode(node){\n        return node.nodeType === 1;\n    }\n    /*---------编译核心方法-------*/\n    // 将node转换成fragment\n    node2fragment(el){\n        // 创建一个文档碎片fragment，内存中的dom节点，以提高执行效率\n        const fragment = document.createDocumentFragment();\n        let firstChild = null;\n        // 将el元素的子元素逐一放到fragment中\n        while(firstChild = el.firstChild){\n            fragment.appendChild(firstChild);\n        }\n        return fragment;\n    }\n    // 判断是否是指令\n    isDirective(attrName){\n        return attrName.startsWith(\"v-\");\n    }\n    // 编译\n    compile(fragment){\n        // 获取子节点，它是一个类数组\n        const childNodes = fragment.childNodes;\n        Array.from(childNodes).forEach(node => {\n            // 判断node是否是文本，还是dom元素\n            if(this.isElementNode(node)){\n                // console.log(\"这是个节点\");\n                this.compileElement(node);\n                // 递归编译子节点\n                this.compile(node);\n            }else{\n                // console.log(\"这是个文本\");\n                this.compileText(node);\n            }\n        })\n    }\n    // 编译文本节点\n    compileText(node){\n        const textContent = node.textContent;\n        const exprs = textContent.match(/\\{\\{(.*?)\\}\\}/g);\n        if(exprs){\n            compileUtil.text(node, this.vm, exprs);\n        }\n    }\n    // 编译元素节点\n    compileElement(node){\n        // 获取所有的属性\n        const attributes = node.attributes;\n        // 依次对属性进行遍历\n        Array.from(attributes).forEach(attr => {\n            const attrName = attr.name;\n            if(this.isDirective(attrName)){\n                const expr = attr.value;\n                const [, type] = attrName.split(\"v-\");\n\n                compileUtil[type](node, this.vm, expr);\n            }\n        });\n    }\n};\n\n\nconst compileUtil = {\n    text(node, vm, exprs){\n        // 这里exprs是一个数组\n        const value = node.textContent;\n        // 判断是否添加过watcher\n        let isWatcher = false;\n        const updateFunc = this.textUpdater;\n\n        function getVal(){\n            let _value = value;\n            exprs.forEach(item => {\n                item.match(/\\{\\{(.*?)\\}\\}/g);\n                const expr = RegExp.$1;\n                if(!isWatcher){\n                    // 添加watcher\n                    const watcher = new Watcher(vm, expr, () => {\n                        updateFunc && updateFunc(node, getVal());\n                    });\n                    Dep.target = watcher;\n                }\n                _value = _value.replace(item, getValue(vm, expr));\n                Dep.target = null;\n            });\n            return _value;\n        }\n        updateFunc && updateFunc(node, getVal());\n        isWatcher = true;\n    },\n    model(node, vm, expr){\n        const updateFunc = this.modelUpdater;\n        // 添加监听器\n        const watcher = new Watcher(vm, expr, ()=>{\n            console.log(\"数据更新了\");\n            updateFunc && updateFunc(node, getValue(vm, expr));\n        })\n        Dep.target = watcher;\n        updateFunc && updateFunc(node, getValue(vm, expr));\n        Dep.target = null;\n\n        // 添加监听事件\n        node.addEventListener(\"input\", (event) => {\n            setValue(vm, expr, event.target.value)\n        })\n    },\n    modelUpdater(node, value){\n        node.value = value;\n    },\n    textUpdater(node, value){\n        node.textContent = value;\n    }\n}","// 数据劫持或数据响应式\nimport Dep from \"./dep\";\n\nexport default class Observer{\n    constructor(data){\n        this.observe(data);\n    }\n    observe(data){\n        // 如果data为空，或者不是个对象，则直接返回\n        if(!data || typeof data !== \"object\"){\n            return;\n        }\n        Object.keys(data).forEach(key => {\n            this.observe(data[key]);\n            this.defineReactive(data, key, data[key]);\n        });\n    }\n    defineReactive(data, key, value){\n        const that = this;\n        const dep = new Dep(key);\n        Object.defineProperty(data, key, {\n            enumerable: true,\n            configurable: true,\n            get(){\n                Dep.target && dep.addListener(Dep.target);\n                return value;\n            },\n            set(newValue){\n                if(newValue != value){\n                    that.observe(newValue);\n                    value = newValue;\n                    dep.notify();  // 通知更新\n                }\n            }\n        })\n    }\n}","// 创建MVVM类\nimport Compile from \"./compile\";\nimport Observer from \"./observer\";\n\nexport default class MVVM{\n    constructor(options){\n        // 解析参数，将参数挂载到实例上\n        this.$options = options;\n        this.$el = options.el;\n        this.$data = options.data;\n        \n        // 数据劫持/数据响应式\n        new Observer(this.$data);\n        // 将数据代理到实例上\n        this.proxyData(this.$data);\n        // 判断el是否存在，如果存在则执行编译工作\n        if(this.$el){\n            new Compile(this.$el, this);\n        }\n    }\n    // 将数据代理到this上\n    proxyData(data){\n        Object.keys(data).forEach(key => {\n            Object.defineProperty(this, key, {\n                enumerable: true,\n                configurable: true,\n                get(){\n                    return this.$data[key];\n                },\n                set(newValue){\n                    this.$data[key] = newValue;\n                }\n            })\n        });\n    }\n}\n\nwindow.MVVM = MVVM;"],"names":["getValue","vm","expr","exprs","split","reduce","total","item","$data","setValue","value","index","length","Dep","constructor","key","listeners","uid","Math","random","toFixed","addListener","listener","includes","push","notify","forEach","update","Watcher","callback","newValue","Compile","el","isElementNode","document","querySelector","fragment","node2fragment","compile","appendChild","node","nodeType","createDocumentFragment","firstChild","isDirective","attrName","startsWith","childNodes","Array","from","compileElement","compileText","textContent","match","compileUtil","text","attributes","attr","name","type","isWatcher","updateFunc","textUpdater","getVal","_value","RegExp","$1","watcher","target","replace","model","modelUpdater","console","log","addEventListener","event","Observer","data","observe","Object","keys","defineReactive","that","dep","defineProperty","enumerable","configurable","get","set","MVVM","options","$options","$el","proxyData","window"],"mappings":"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"}